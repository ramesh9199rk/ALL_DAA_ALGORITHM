#include<stdio.h>
#include<limits.h>
#include<stdbool.h>
#define n 6
int minkey(int key[],bool mstset[])
{
    int min=INT_MAX,minindex;
    for (int v=0;v<n;v++)
    if(mstset[v]==false && key[v]<min)
    min=key[v],minindex=v;
    return minindex;
}
void prim(int a[n][n])
{
    int parent[n];
    int key[n];
    bool mstset[n];
    //int sum=0;
    for(int i=0;i<n;i++)
    key[i]=INT_MAX,mstset[i]=false;
    key[0]=0;
    parent[0]=-1;
    for(int j=0;j<n-1;j++)
    {
        int u=minkey(key,mstset);
        mstset[u]=true;
        for(int v=0;v<n;v++)
        {
        if(a[u][v] && mstset[v]==false && a[u][v]<key[v])
        parent[v]=u,key[v]=a[u][v];
       
        }
    }
   int sum=0,s[n][n],j,i;
   for(i=0;i<n;i++)
   {
       for(j=0;j<n;j++)
       {
           s[i][j]=0;
       }
   }
    for(i=1;i<n;i++)
   {
       s[parent[i]][i]=a[i][parent[i]];
        s[i][parent[i]]=a[parent[i]][i];
        sum+=a[i][parent[i]];
   }
   for(i=0;i<n;i++)
   {
       for(j=0;j<n;j++)
       {
           printf("%d\t",s[i][j]);
       }
       printf("\n");
   }
   printf("Total cost of spanning tree=%d",sum);

}
int main()
{
    int i,j,k;
    scanf("%d",&k);
    int a[n][n];
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    prim(a);
    return 0;
}
